/* 
    Selectance works by removing the basic select element and uses other generated elements instead.
    So it can be anoying to customize the style.

    Fortunately this file helps you to customize multiselectors.
    Link it to the html after the base css (selectance-style.css) to overwrite 
    the style with yours or use it alone to start from scratch.

    The selectors are listed. Just add the properties. üëç

    ! Unless you know what you are doing, do not overwrite the properties that are recommended you to not be overwrited.
    ! They are part of the main mecanic.
    ! Overwriting them can lead to unwanted behavior.
    ! Any other property in this file is for accessibility purpose. You can modify them.
*/


/* 
 * .multiselector-subst is affected to the containers which hold all 
 * the HTML elements that are used.
*/
.multiselector-subst {
    /* ! Do not overwrite `position` */
    position: relative;
}

/*
 * For instruction texts
*/
.multiselector-subst .instruction {
    position: relative;
    color: gray;
    margin: 0;
    padding: 0 1em;
    font-size: 0.9em;
}

/* 
 * This span elements are the selected options.
 * `selected-items-div` is the container that display the selected elements
*/
.multiselector-subst .selected-items-div span {
    position : relative;
    display: inline-block;
    margin: 0.1em 0.5em;
    padding: 0 0 0 1em;
}

/*
 * the class `preselected` is added to the selected options which were 
 * selected before rendering the form. A small circle is added to tell it to the user
*/
.multiselector-subst .selected-items-div span.preselected::before, .multiselector-subst .instruction.for-preselected::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0.5em;
    transform: translate(-50%, -50%);
    height: 0.5em;
    width: 0.5em;
    border-radius: 100%;
    background-color: gray;
}


/* 
 * `.multiselector-subst-selecter` is a div that contains search input 
 * and the button which opens or closes the list of seletable items.
*/
.multiselector-subst .multiselector-subst-selecter {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
}

/* 
 * This input is the one that helps the user search for an option
*/
.multiselector-subst .multiselector-subst-selecter input{

}

/* 
 * svg icon to toggle options list display
*/
.multiselector-subst .multiselector-subst-selecter svg{
    height: 1rem;
    width: 1rem;
    margin: 0.1rem 0.5rem;
}

/* 
 * The class `active` is add to `multiselector-subst` when options list is visible.
*/
.multiselector-subst.active .multiselector-subst-selecter svg{
    transform: rotate(180deg);
}

/* 
 * This is the container which contains the list of selectable items.
*/
.multiselector-subst ul {
    /* ! Do not overwrite : `display`, `position`. */
    display: none;
    position: absolute;

    top: 101%;
    margin: 0;
    list-style: none;
    padding: 0 0.2rem;
    border: 2px solid black;
    background-color: white;
    max-height: 20rem;
    overflow-y: auto;

}


/* 
 *  The container of selectable items when they are been displayed.
*/
.multiselector-subst.active ul {
    /* ! Do not overwrite `display`. */
    display: block;
    z-index: 5000;
}


/* 
 * Selectable option element
*/
.multiselector-subst li {
    /* ! Do not overwrite `display` */
    display: flex !important;
    user-select: none;
    cursor: pointer;
}

/* 
 * The selectable option element when it don't match with the search value
*/
.multiselector-subst li.hidden {
    /* ! Do not overwrite `display` */
    display: none !important;
}

/* 
 * The square that change color whether the option is selected or not. 
*/
.multiselector-subst li span {
    display: inline-block;
    height: 1em;
    width: 1em;
    border: 2px solid black;
    background-color: white;
    margin-right: 1rem;
}

/* 
 * `selected` is added to `.multiselector-subst li` Element to indicate that this item is already selected.
*/
.multiselector-subst li.selected span {
    background-color: blue;
}